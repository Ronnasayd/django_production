version: "3.3"
services:
  web:
    container_name: web
    stdin_open: True
    tty: True
    build:
      context: "."
    restart: always
    expose:
      - 5000
    command: ./runserver.sh
    # depends_on:
    #   - redis
    volumes:
      - "media:/tmp/app/media/:rw"
      - "static:/tmp/app/static/:rw"
  nginx:
    container_name: nginx
    stdin_open: True
    tty: True
    image: nginx:1.17.5-alpine
    restart: always
    volumes:
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf:rw"
      - "./nginx/nginx-snippet-https.conf:/etc/nginx/nginx-snippet-https.conf:rw"
      - "static:/tmp/static-data:rw"
      - "media:/tmp/media-data:rw"
      - "logs:/tmp/logs-data:rw"
      - "web_root:/var/www/html:rw"
      - "certbot_etc:/etc/letsencrypt:rw"
      - "certbot_var:/var/lib/letsencrypt:rw"
    depends_on:
      - web
    ports:
      - 80:5000
      - 443:443
  ## Container to run redis
  # redis:
  #   container_name: redis
  #   stdin_open: True
  #   tty: True
  #   image: redis:5.0.6-alpine
  #   restart: always
  # ## Use this container to obtain letsecrypt certs
  # certbot:
  #   container_name: certbot
  #   image: certbot/certbot
  #   stdin_open: True
  #   tty: True
  #   command: certonly -n --webroot --webroot-path=/var/www/html --agree-tos -m a@a.com --force-renewal -d 5712d49c.ngrok.io
  #   volumes:
  #     - "web_root:/var/www/html:rw"
  #     - "certbot_etc:/etc/letsencrypt:rw"
  #     - "certbot_var:/var/lib/letsencrypt:rw"
  #   depends_on:
  #     - nginx

volumes:
  media:
  static:
  logs:
  web_root:
  certbot_etc:
  certbot_var:
